#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Threads
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Threads")]
	public partial class DataThreadsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertColumnCommunity(ColumnCommunity instance);
    partial void UpdateColumnCommunity(ColumnCommunity instance);
    partial void DeleteColumnCommunity(ColumnCommunity instance);
    partial void InsertCommunity(Community instance);
    partial void UpdateCommunity(Community instance);
    partial void DeleteCommunity(Community instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertEntry(Entry instance);
    partial void UpdateEntry(Entry instance);
    partial void DeleteEntry(Entry instance);
    #endregion
		
		public DataThreadsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ThreadsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataThreadsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataThreadsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataThreadsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataThreadsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ColumnCommunity> ColumnCommunity
		{
			get
			{
				return this.GetTable<ColumnCommunity>();
			}
		}
		
		public System.Data.Linq.Table<Community> Community
		{
			get
			{
				return this.GetTable<Community>();
			}
		}
		
		public System.Data.Linq.Table<Person> Person
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Entry> Entry
		{
			get
			{
				return this.GetTable<Entry>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Member.ReadInstance]")]
		public ISingleResult<Member_ReadInstanceResult> Member_ReadInstance([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<Member_ReadInstanceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Entry.Save]")]
		public ISingleResult<Entry_SaveResult> Entry_Save([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommunityID", DbType="BigInt")] System.Nullable<long> communityID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ColumnID", DbType="BigInt")] System.Nullable<long> columnID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatorID", DbType="BigInt")] System.Nullable<long> creatorID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EntryText", DbType="VarChar(4048)")] string entryText)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), communityID, columnID, creatorID, entryText);
			return ((ISingleResult<Entry_SaveResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Entry.ReadByCommunityID]")]
		public ISingleResult<Entry_ReadByCommunityIDResult> Entry_ReadByCommunityID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommunityID", DbType="BigInt")] System.Nullable<long> communityID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), communityID);
			return ((ISingleResult<Entry_ReadByCommunityIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[News.ReadByMemberID]")]
		public ISingleResult<News_ReadByMemberIDResult> News_ReadByMemberID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberID", DbType="BigInt")] System.Nullable<long> memberID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberID);
			return ((ISingleResult<News_ReadByMemberIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Community.ReadDict]")]
		public ISingleResult<Community_ReadDictResult> Community_ReadDict([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberID", DbType="BigInt")] System.Nullable<long> memberID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberID);
			return ((ISingleResult<Community_ReadDictResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Community.ReadSuggestDict]")]
		public ISingleResult<Community_ReadSuggestDictResult> Community_ReadSuggestDict([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberID", DbType="BigInt")] System.Nullable<long> memberID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberID);
			return ((ISingleResult<Community_ReadSuggestDictResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Community.ReadMyDict]")]
		public ISingleResult<Community_ReadMyDictResult> Community_ReadMyDict([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberID", DbType="BigInt")] System.Nullable<long> memberID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberID);
			return ((ISingleResult<Community_ReadMyDictResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ColumnCommunity")]
	public partial class ColumnCommunity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _CommunityID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private string _DeleteNote;
		
		private System.Nullable<long> _CreatorID;
		
		private EntitySet<Entry> _Entry;
		
		private EntityRef<Community> _Community;
		
		private EntityRef<Person> _Person;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCommunityIDChanging(long value);
    partial void OnCommunityIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnDeleteNoteChanging(string value);
    partial void OnDeleteNoteChanged();
    partial void OnCreatorIDChanging(System.Nullable<long> value);
    partial void OnCreatorIDChanged();
    #endregion
		
		public ColumnCommunity()
		{
			this._Entry = new EntitySet<Entry>(new Action<Entry>(this.attach_Entry), new Action<Entry>(this.detach_Entry));
			this._Community = default(EntityRef<Community>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityID", DbType="BigInt NOT NULL")]
		public long CommunityID
		{
			get
			{
				return this._CommunityID;
			}
			set
			{
				if ((this._CommunityID != value))
				{
					if (this._Community.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommunityIDChanging(value);
					this.SendPropertyChanging();
					this._CommunityID = value;
					this.SendPropertyChanged("CommunityID");
					this.OnCommunityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(32)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteNote", DbType="VarChar(1024)")]
		public string DeleteNote
		{
			get
			{
				return this._DeleteNote;
			}
			set
			{
				if ((this._DeleteNote != value))
				{
					this.OnDeleteNoteChanging(value);
					this.SendPropertyChanging();
					this._DeleteNote = value;
					this.SendPropertyChanged("DeleteNote");
					this.OnDeleteNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="BigInt")]
		public System.Nullable<long> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColumnCommunity_Entry", Storage="_Entry", ThisKey="ID", OtherKey="ColumnID")]
		public EntitySet<Entry> Entry
		{
			get
			{
				return this._Entry;
			}
			set
			{
				this._Entry.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Community_ColumnCommunity", Storage="_Community", ThisKey="CommunityID", OtherKey="ID", IsForeignKey=true)]
		public Community Community
		{
			get
			{
				return this._Community.Entity;
			}
			set
			{
				Community previousValue = this._Community.Entity;
				if (((previousValue != value) 
							|| (this._Community.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Community.Entity = null;
						previousValue.ColumnCommunity.Remove(this);
					}
					this._Community.Entity = value;
					if ((value != null))
					{
						value.ColumnCommunity.Add(this);
						this._CommunityID = value.ID;
					}
					else
					{
						this._CommunityID = default(long);
					}
					this.SendPropertyChanged("Community");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_ColumnCommunity", Storage="_Person", ThisKey="CreatorID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.ColumnCommunity.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.ColumnCommunity.Add(this);
						this._CreatorID = value.ID;
					}
					else
					{
						this._CreatorID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entry(Entry entity)
		{
			this.SendPropertyChanging();
			entity.ColumnCommunity = this;
		}
		
		private void detach_Entry(Entry entity)
		{
			this.SendPropertyChanging();
			entity.ColumnCommunity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Community")]
	public partial class Community : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _LogoLink;
		
		private string _Link;
		
		private string _Decription;
		
		private System.Nullable<long> _OwnerID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _ClosedDate;
		
		private string _ClosedNote;
		
		private EntitySet<ColumnCommunity> _ColumnCommunity;
		
		private EntitySet<Entry> _Entry;
		
		private EntityRef<Person> _Person;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLogoLinkChanging(string value);
    partial void OnLogoLinkChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnDecriptionChanging(string value);
    partial void OnDecriptionChanged();
    partial void OnOwnerIDChanging(System.Nullable<long> value);
    partial void OnOwnerIDChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnClosedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosedDateChanged();
    partial void OnClosedNoteChanging(string value);
    partial void OnClosedNoteChanged();
    #endregion
		
		public Community()
		{
			this._ColumnCommunity = new EntitySet<ColumnCommunity>(new Action<ColumnCommunity>(this.attach_ColumnCommunity), new Action<ColumnCommunity>(this.detach_ColumnCommunity));
			this._Entry = new EntitySet<Entry>(new Action<Entry>(this.attach_Entry), new Action<Entry>(this.detach_Entry));
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoLink", DbType="VarChar(1024)")]
		public string LogoLink
		{
			get
			{
				return this._LogoLink;
			}
			set
			{
				if ((this._LogoLink != value))
				{
					this.OnLogoLinkChanging(value);
					this.SendPropertyChanging();
					this._LogoLink = value;
					this.SendPropertyChanged("LogoLink");
					this.OnLogoLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(1024)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decription", DbType="VarChar(1024)")]
		public string Decription
		{
			get
			{
				return this._Decription;
			}
			set
			{
				if ((this._Decription != value))
				{
					this.OnDecriptionChanging(value);
					this.SendPropertyChanging();
					this._Decription = value;
					this.SendPropertyChanged("Decription");
					this.OnDecriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="BigInt")]
		public System.Nullable<long> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosedDate
		{
			get
			{
				return this._ClosedDate;
			}
			set
			{
				if ((this._ClosedDate != value))
				{
					this.OnClosedDateChanging(value);
					this.SendPropertyChanging();
					this._ClosedDate = value;
					this.SendPropertyChanged("ClosedDate");
					this.OnClosedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosedNote", DbType="VarChar(1024)")]
		public string ClosedNote
		{
			get
			{
				return this._ClosedNote;
			}
			set
			{
				if ((this._ClosedNote != value))
				{
					this.OnClosedNoteChanging(value);
					this.SendPropertyChanging();
					this._ClosedNote = value;
					this.SendPropertyChanged("ClosedNote");
					this.OnClosedNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Community_ColumnCommunity", Storage="_ColumnCommunity", ThisKey="ID", OtherKey="CommunityID")]
		public EntitySet<ColumnCommunity> ColumnCommunity
		{
			get
			{
				return this._ColumnCommunity;
			}
			set
			{
				this._ColumnCommunity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Community_Entry", Storage="_Entry", ThisKey="ID", OtherKey="CommunityID")]
		public EntitySet<Entry> Entry
		{
			get
			{
				return this._Entry;
			}
			set
			{
				this._Entry.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Community", Storage="_Person", ThisKey="OwnerID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Community.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Community.Add(this);
						this._OwnerID = value.ID;
					}
					else
					{
						this._OwnerID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ColumnCommunity(ColumnCommunity entity)
		{
			this.SendPropertyChanging();
			entity.Community = this;
		}
		
		private void detach_ColumnCommunity(ColumnCommunity entity)
		{
			this.SendPropertyChanging();
			entity.Community = null;
		}
		
		private void attach_Entry(Entry entity)
		{
			this.SendPropertyChanging();
			entity.Community = this;
		}
		
		private void detach_Entry(Entry entity)
		{
			this.SendPropertyChanging();
			entity.Community = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _Surname;
		
		private string _UserName;
		
		private string _PhotoLink;
		
		private string _About;
		
		private System.Nullable<System.DateTime> _JoinedDate;
		
		private System.Nullable<System.DateTime> _LeaveDate;
		
		private string _LeaveNote;
		
		private EntitySet<ColumnCommunity> _ColumnCommunity;
		
		private EntitySet<Community> _Community;
		
		private EntitySet<Entry> _Entry;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPhotoLinkChanging(string value);
    partial void OnPhotoLinkChanged();
    partial void OnAboutChanging(string value);
    partial void OnAboutChanged();
    partial void OnJoinedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinedDateChanged();
    partial void OnLeaveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveDateChanged();
    partial void OnLeaveNoteChanging(string value);
    partial void OnLeaveNoteChanged();
    #endregion
		
		public Person()
		{
			this._ColumnCommunity = new EntitySet<ColumnCommunity>(new Action<ColumnCommunity>(this.attach_ColumnCommunity), new Action<ColumnCommunity>(this.detach_ColumnCommunity));
			this._Community = new EntitySet<Community>(new Action<Community>(this.attach_Community), new Action<Community>(this.detach_Community));
			this._Entry = new EntitySet<Entry>(new Action<Entry>(this.attach_Entry), new Action<Entry>(this.detach_Entry));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(256)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(32)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoLink", DbType="VarChar(1024)")]
		public string PhotoLink
		{
			get
			{
				return this._PhotoLink;
			}
			set
			{
				if ((this._PhotoLink != value))
				{
					this.OnPhotoLinkChanging(value);
					this.SendPropertyChanging();
					this._PhotoLink = value;
					this.SendPropertyChanged("PhotoLink");
					this.OnPhotoLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_About", DbType="VarChar(1024)")]
		public string About
		{
			get
			{
				return this._About;
			}
			set
			{
				if ((this._About != value))
				{
					this.OnAboutChanging(value);
					this.SendPropertyChanging();
					this._About = value;
					this.SendPropertyChanged("About");
					this.OnAboutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JoinedDate
		{
			get
			{
				return this._JoinedDate;
			}
			set
			{
				if ((this._JoinedDate != value))
				{
					this.OnJoinedDateChanging(value);
					this.SendPropertyChanging();
					this._JoinedDate = value;
					this.SendPropertyChanged("JoinedDate");
					this.OnJoinedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveNote", DbType="VarChar(1024)")]
		public string LeaveNote
		{
			get
			{
				return this._LeaveNote;
			}
			set
			{
				if ((this._LeaveNote != value))
				{
					this.OnLeaveNoteChanging(value);
					this.SendPropertyChanging();
					this._LeaveNote = value;
					this.SendPropertyChanged("LeaveNote");
					this.OnLeaveNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_ColumnCommunity", Storage="_ColumnCommunity", ThisKey="ID", OtherKey="CreatorID")]
		public EntitySet<ColumnCommunity> ColumnCommunity
		{
			get
			{
				return this._ColumnCommunity;
			}
			set
			{
				this._ColumnCommunity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Community", Storage="_Community", ThisKey="ID", OtherKey="OwnerID")]
		public EntitySet<Community> Community
		{
			get
			{
				return this._Community;
			}
			set
			{
				this._Community.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Entry", Storage="_Entry", ThisKey="ID", OtherKey="CreatorID")]
		public EntitySet<Entry> Entry
		{
			get
			{
				return this._Entry;
			}
			set
			{
				this._Entry.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ColumnCommunity(ColumnCommunity entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_ColumnCommunity(ColumnCommunity entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Community(Community entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Community(Community entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_Entry(Entry entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Entry(Entry entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entry")]
	public partial class Entry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private long _CommunityID;
		
		private System.Nullable<long> _ColumnID;
		
		private System.Nullable<long> _CreatorID;
		
		private string _EntryText;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private string _DeleteNote;
		
		private EntityRef<ColumnCommunity> _ColumnCommunity;
		
		private EntityRef<Community> _Community;
		
		private EntityRef<Person> _Person;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCommunityIDChanging(long value);
    partial void OnCommunityIDChanged();
    partial void OnColumnIDChanging(System.Nullable<long> value);
    partial void OnColumnIDChanged();
    partial void OnCreatorIDChanging(System.Nullable<long> value);
    partial void OnCreatorIDChanged();
    partial void OnEntryTextChanging(string value);
    partial void OnEntryTextChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnDeleteNoteChanging(string value);
    partial void OnDeleteNoteChanged();
    #endregion
		
		public Entry()
		{
			this._ColumnCommunity = default(EntityRef<ColumnCommunity>);
			this._Community = default(EntityRef<Community>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityID", DbType="BigInt NOT NULL")]
		public long CommunityID
		{
			get
			{
				return this._CommunityID;
			}
			set
			{
				if ((this._CommunityID != value))
				{
					if (this._Community.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommunityIDChanging(value);
					this.SendPropertyChanging();
					this._CommunityID = value;
					this.SendPropertyChanged("CommunityID");
					this.OnCommunityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="BigInt")]
		public System.Nullable<long> ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					if (this._ColumnCommunity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColumnIDChanging(value);
					this.SendPropertyChanging();
					this._ColumnID = value;
					this.SendPropertyChanged("ColumnID");
					this.OnColumnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="BigInt")]
		public System.Nullable<long> CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryText", DbType="VarChar(4048)")]
		public string EntryText
		{
			get
			{
				return this._EntryText;
			}
			set
			{
				if ((this._EntryText != value))
				{
					this.OnEntryTextChanging(value);
					this.SendPropertyChanging();
					this._EntryText = value;
					this.SendPropertyChanged("EntryText");
					this.OnEntryTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteNote", DbType="VarChar(1024)")]
		public string DeleteNote
		{
			get
			{
				return this._DeleteNote;
			}
			set
			{
				if ((this._DeleteNote != value))
				{
					this.OnDeleteNoteChanging(value);
					this.SendPropertyChanging();
					this._DeleteNote = value;
					this.SendPropertyChanged("DeleteNote");
					this.OnDeleteNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ColumnCommunity_Entry", Storage="_ColumnCommunity", ThisKey="ColumnID", OtherKey="ID", IsForeignKey=true)]
		public ColumnCommunity ColumnCommunity
		{
			get
			{
				return this._ColumnCommunity.Entity;
			}
			set
			{
				ColumnCommunity previousValue = this._ColumnCommunity.Entity;
				if (((previousValue != value) 
							|| (this._ColumnCommunity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ColumnCommunity.Entity = null;
						previousValue.Entry.Remove(this);
					}
					this._ColumnCommunity.Entity = value;
					if ((value != null))
					{
						value.Entry.Add(this);
						this._ColumnID = value.ID;
					}
					else
					{
						this._ColumnID = default(Nullable<long>);
					}
					this.SendPropertyChanged("ColumnCommunity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Community_Entry", Storage="_Community", ThisKey="CommunityID", OtherKey="ID", IsForeignKey=true)]
		public Community Community
		{
			get
			{
				return this._Community.Entity;
			}
			set
			{
				Community previousValue = this._Community.Entity;
				if (((previousValue != value) 
							|| (this._Community.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Community.Entity = null;
						previousValue.Entry.Remove(this);
					}
					this._Community.Entity = value;
					if ((value != null))
					{
						value.Entry.Add(this);
						this._CommunityID = value.ID;
					}
					else
					{
						this._CommunityID = default(long);
					}
					this.SendPropertyChanged("Community");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Entry", Storage="_Person", ThisKey="CreatorID", OtherKey="ID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Entry.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Entry.Add(this);
						this._CreatorID = value.ID;
					}
					else
					{
						this._CreatorID = default(Nullable<long>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class Member_ReadInstanceResult
	{
		
		private long _ID;
		
		private string _Name;
		
		private string _UserName;
		
		private string _FullName;
		
		private string _About;
		
		private System.Nullable<System.DateTime> _JoinedDate;
		
		private System.Nullable<System.DateTime> _LeaveDate;
		
		private string _LeaveNote;
		
		public Member_ReadInstanceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(32)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(513) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_About", DbType="VarChar(1024)")]
		public string About
		{
			get
			{
				return this._About;
			}
			set
			{
				if ((this._About != value))
				{
					this._About = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> JoinedDate
		{
			get
			{
				return this._JoinedDate;
			}
			set
			{
				if ((this._JoinedDate != value))
				{
					this._JoinedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this._LeaveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveNote", DbType="VarChar(1024)")]
		public string LeaveNote
		{
			get
			{
				return this._LeaveNote;
			}
			set
			{
				if ((this._LeaveNote != value))
				{
					this._LeaveNote = value;
				}
			}
		}
	}
	
	public partial class Entry_SaveResult
	{
		
		private long _ID;
		
		public Entry_SaveResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class Entry_ReadByCommunityIDResult
	{
		
		private long _Entry_ID;
		
		private System.Nullable<long> _Community_ID;
		
		private string _Community_Name;
		
		private System.Nullable<long> _ColumnCommunity_ID;
		
		private string _ColumnCommunity_Name;
		
		private string _Entry_Text;
		
		private string _Entry_CreateDate;
		
		private string _Entry_CreateDateEst;
		
		public Entry_ReadByCommunityIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_ID", DbType="BigInt NOT NULL")]
		public long Entry_ID
		{
			get
			{
				return this._Entry_ID;
			}
			set
			{
				if ((this._Entry_ID != value))
				{
					this._Entry_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Community_ID", DbType="BigInt")]
		public System.Nullable<long> Community_ID
		{
			get
			{
				return this._Community_ID;
			}
			set
			{
				if ((this._Community_ID != value))
				{
					this._Community_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Community_Name", DbType="VarChar(256)")]
		public string Community_Name
		{
			get
			{
				return this._Community_Name;
			}
			set
			{
				if ((this._Community_Name != value))
				{
					this._Community_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnCommunity_ID", DbType="BigInt")]
		public System.Nullable<long> ColumnCommunity_ID
		{
			get
			{
				return this._ColumnCommunity_ID;
			}
			set
			{
				if ((this._ColumnCommunity_ID != value))
				{
					this._ColumnCommunity_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnCommunity_Name", DbType="VarChar(256)")]
		public string ColumnCommunity_Name
		{
			get
			{
				return this._ColumnCommunity_Name;
			}
			set
			{
				if ((this._ColumnCommunity_Name != value))
				{
					this._ColumnCommunity_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_Text", DbType="VarChar(4048)")]
		public string Entry_Text
		{
			get
			{
				return this._Entry_Text;
			}
			set
			{
				if ((this._Entry_Text != value))
				{
					this._Entry_Text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_CreateDate", DbType="VarChar(50)")]
		public string Entry_CreateDate
		{
			get
			{
				return this._Entry_CreateDate;
			}
			set
			{
				if ((this._Entry_CreateDate != value))
				{
					this._Entry_CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_CreateDateEst", DbType="VarChar(MAX)")]
		public string Entry_CreateDateEst
		{
			get
			{
				return this._Entry_CreateDateEst;
			}
			set
			{
				if ((this._Entry_CreateDateEst != value))
				{
					this._Entry_CreateDateEst = value;
				}
			}
		}
	}
	
	public partial class News_ReadByMemberIDResult
	{
		
		private long _Community_ID;
		
		private string _Community_Name;
		
		private long _Entry_ID;
		
		private string _ColumnCommunity_Name;
		
		private long _ColumnCommunity_ID;
		
		private string _Entry_Text;
		
		private string _Entry_CreateDate;
		
		private string _Entry_CreateDateEst;
		
		public News_ReadByMemberIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Community_ID", DbType="BigInt NOT NULL")]
		public long Community_ID
		{
			get
			{
				return this._Community_ID;
			}
			set
			{
				if ((this._Community_ID != value))
				{
					this._Community_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Community_Name", DbType="VarChar(128)")]
		public string Community_Name
		{
			get
			{
				return this._Community_Name;
			}
			set
			{
				if ((this._Community_Name != value))
				{
					this._Community_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_ID", DbType="BigInt NOT NULL")]
		public long Entry_ID
		{
			get
			{
				return this._Entry_ID;
			}
			set
			{
				if ((this._Entry_ID != value))
				{
					this._Entry_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnCommunity_Name", DbType="VarChar(32)")]
		public string ColumnCommunity_Name
		{
			get
			{
				return this._ColumnCommunity_Name;
			}
			set
			{
				if ((this._ColumnCommunity_Name != value))
				{
					this._ColumnCommunity_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnCommunity_ID", DbType="BigInt NOT NULL")]
		public long ColumnCommunity_ID
		{
			get
			{
				return this._ColumnCommunity_ID;
			}
			set
			{
				if ((this._ColumnCommunity_ID != value))
				{
					this._ColumnCommunity_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_Text", DbType="VarChar(4048)")]
		public string Entry_Text
		{
			get
			{
				return this._Entry_Text;
			}
			set
			{
				if ((this._Entry_Text != value))
				{
					this._Entry_Text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_CreateDate", DbType="VarChar(50)")]
		public string Entry_CreateDate
		{
			get
			{
				return this._Entry_CreateDate;
			}
			set
			{
				if ((this._Entry_CreateDate != value))
				{
					this._Entry_CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entry_CreateDateEst", DbType="VarChar(MAX)")]
		public string Entry_CreateDateEst
		{
			get
			{
				return this._Entry_CreateDateEst;
			}
			set
			{
				if ((this._Entry_CreateDateEst != value))
				{
					this._Entry_CreateDateEst = value;
				}
			}
		}
	}
	
	public partial class Community_ReadDictResult
	{
		
		private long _ID;
		
		private string _Name;
		
		private string _Link;
		
		private string _Decription;
		
		private System.Nullable<long> _OwnerID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _IsMember;
		
		private System.Nullable<long> _DefaultColumnID;
		
		private string _CountMembers;
		
		public Community_ReadDictResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(1024)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this._Link = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decription", DbType="VarChar(1024)")]
		public string Decription
		{
			get
			{
				return this._Decription;
			}
			set
			{
				if ((this._Decription != value))
				{
					this._Decription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="BigInt")]
		public System.Nullable<long> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMember", DbType="Bit")]
		public System.Nullable<bool> IsMember
		{
			get
			{
				return this._IsMember;
			}
			set
			{
				if ((this._IsMember != value))
				{
					this._IsMember = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultColumnID", DbType="BigInt")]
		public System.Nullable<long> DefaultColumnID
		{
			get
			{
				return this._DefaultColumnID;
			}
			set
			{
				if ((this._DefaultColumnID != value))
				{
					this._DefaultColumnID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountMembers", DbType="VarChar(32)")]
		public string CountMembers
		{
			get
			{
				return this._CountMembers;
			}
			set
			{
				if ((this._CountMembers != value))
				{
					this._CountMembers = value;
				}
			}
		}
	}
	
	public partial class Community_ReadSuggestDictResult
	{
		
		private long _ID;
		
		private string _Name;
		
		private string _Link;
		
		private string _Decription;
		
		private System.Nullable<long> _OwnerID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _IsMember;
		
		private System.Nullable<long> _DefaultColumnID;
		
		private string _CountMembers;
		
		public Community_ReadSuggestDictResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(1024)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this._Link = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decription", DbType="VarChar(1024)")]
		public string Decription
		{
			get
			{
				return this._Decription;
			}
			set
			{
				if ((this._Decription != value))
				{
					this._Decription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="BigInt")]
		public System.Nullable<long> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMember", DbType="Bit")]
		public System.Nullable<bool> IsMember
		{
			get
			{
				return this._IsMember;
			}
			set
			{
				if ((this._IsMember != value))
				{
					this._IsMember = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultColumnID", DbType="BigInt")]
		public System.Nullable<long> DefaultColumnID
		{
			get
			{
				return this._DefaultColumnID;
			}
			set
			{
				if ((this._DefaultColumnID != value))
				{
					this._DefaultColumnID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountMembers", DbType="VarChar(32)")]
		public string CountMembers
		{
			get
			{
				return this._CountMembers;
			}
			set
			{
				if ((this._CountMembers != value))
				{
					this._CountMembers = value;
				}
			}
		}
	}
	
	public partial class Community_ReadMyDictResult
	{
		
		private long _ID;
		
		private string _Name;
		
		private string _Link;
		
		private string _Decription;
		
		private System.Nullable<long> _OwnerID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<bool> _IsMember;
		
		private System.Nullable<long> _DefaultColumnID;
		
		private string _CountMembers;
		
		public Community_ReadMyDictResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(1024)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this._Link = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decription", DbType="VarChar(1024)")]
		public string Decription
		{
			get
			{
				return this._Decription;
			}
			set
			{
				if ((this._Decription != value))
				{
					this._Decription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="BigInt")]
		public System.Nullable<long> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMember", DbType="Bit")]
		public System.Nullable<bool> IsMember
		{
			get
			{
				return this._IsMember;
			}
			set
			{
				if ((this._IsMember != value))
				{
					this._IsMember = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultColumnID", DbType="BigInt")]
		public System.Nullable<long> DefaultColumnID
		{
			get
			{
				return this._DefaultColumnID;
			}
			set
			{
				if ((this._DefaultColumnID != value))
				{
					this._DefaultColumnID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountMembers", DbType="VarChar(32)")]
		public string CountMembers
		{
			get
			{
				return this._CountMembers;
			}
			set
			{
				if ((this._CountMembers != value))
				{
					this._CountMembers = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
